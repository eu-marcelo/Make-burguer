{"ast":null,"code":"import Mensagem from \"./Mensagem.vue\";\nexport default {\n  name: \"Dashboard\",\n  components: {\n    Mensagem\n  },\n  data() {\n    return {\n      burgers: null,\n      burger_id: null,\n      status: [],\n      msg: null\n    };\n  },\n  methods: {\n    async getPedidos() {\n      const req = await fetch(\"http://localhost:3000/burgers\");\n      const data = await req.json();\n      this.burgers = data;\n\n      //resgtando os status do backend\n      this.getStatus();\n    },\n    async getStatus() {\n      const req = await fetch(\"http://localhost:3000/status\");\n      const data = await req.json();\n      this.status = data;\n    },\n    async deleteBurguer(id) {\n      const req = await fetch(`http://localhost:3000/burgers/${id}`, {\n        method: \"DELETE\"\n      });\n      const res = req.json();\n\n      //Inserindo mensagem de envio de pedido\n      this.msg = `Pedido REMOVIDO com sucesso`;\n\n      //limpando mensagem da tela\n      setTimeout(() => this.msg = \"\", 3000);\n      this.getPedidos();\n    },\n    async updateBurger(event, id) {\n      const option = event.target.value;\n      const dataJson = JSON.stringify({\n        status: option\n      });\n      const req = await fetch(`http://localhost:3000/burgers/${id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-type\": \"application/json\"\n        },\n        body: dataJson\n      });\n      const res = await req.json();\n\n      //Inserindo mensagem de envio de pedido\n      this.msg = `Pedido Nº ${resposta.id} realizado com sucesso`;\n\n      //limpando mensagem da tela\n      setTimeout(() => this.msg = \"\", 3000);\n      console.log(res);\n    }\n  },\n  mounted() {\n    this.getPedidos();\n  }\n};","map":{"version":3,"mappings":"AA4CA,OAAOA,QAAO,MAAO,gBAAe;AAEpC,eAAe;EACbC,IAAI,EAAE,WAAW;EACjBC,UAAU,EAAE;IACVF;EACF,CAAC;EACDG,IAAI,GAAG;IACL,OAAO;MACLC,OAAO,EAAE,IAAI;MACbC,SAAS,EAAE,IAAI;MACfC,MAAM,EAAE,EAAE;MACVC,GAAG,EAAE;IACP;EACF,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,UAAU,GAAG;MACjB,MAAMC,GAAE,GAAI,MAAMC,KAAK,CAAC,+BAA+B,CAAC;MAExD,MAAMR,IAAG,GAAI,MAAMO,GAAG,CAACE,IAAI,EAAE;MAE7B,IAAI,CAACR,OAAM,GAAID,IAAI;;MAEnB;MACA,IAAI,CAACU,SAAS,EAAE;IAElB,CAAC;IACD,MAAMA,SAAS,GAAG;MAChB,MAAMH,GAAE,GAAI,MAAMC,KAAK,CAAC,8BAA8B,CAAC;MAEvD,MAAMR,IAAG,GAAI,MAAMO,GAAG,CAACE,IAAI,EAAE;MAE7B,IAAI,CAACN,MAAK,GAAIH,IAAG;IACnB,CAAC;IACD,MAAMW,aAAa,CAACC,EAAE,EAAE;MACtB,MAAML,GAAE,GAAI,MAAMC,KAAK,CAAE,iCAAgCI,EAAG,EAAC,EAAC;QAC5DC,MAAM,EAAE;MACV,CAAC,CAAC;MAEF,MAAMC,GAAE,GAAIP,GAAG,CAACE,IAAI,EAAE;;MAEtB;MACA,IAAI,CAACL,GAAE,GAAK,6BAA2B;;MAEvC;MACAW,UAAU,CAAC,MAAM,IAAI,CAACX,GAAE,GAAI,EAAE,EAAE,IAAI;MAEpC,IAAI,CAACE,UAAU,EAAE;IAEnB,CAAC;IACD,MAAMU,YAAY,CAACC,KAAK,EAAEL,EAAE,EAAE;MAC5B,MAAMM,MAAK,GAAID,KAAK,CAACE,MAAM,CAACC,KAAK;MAEjC,MAAMC,QAAO,GAAIC,IAAI,CAACC,SAAS,CAAC;QAAEpB,MAAM,EAAEe;MAAO,CAAC;MAElD,MAAMX,GAAE,GAAI,MAAMC,KAAK,CAAE,iCAAgCI,EAAG,EAAC,EAAE;QAC7DC,MAAM,EAAE,OAAO;QACfW,OAAO,EAAE;UAAE,cAAc,EAAE;QAAkB,CAAC;QAC9CC,IAAI,EAAEJ;MACR,CAAC;MAED,MAAMP,GAAE,GAAI,MAAMP,GAAG,CAACE,IAAI,EAAE;;MAE5B;MACA,IAAI,CAACL,GAAE,GAAK,aAAYsB,QAAQ,CAACd,EAAE,wBAAuB;;MAE1D;MACAG,UAAU,CAAC,MAAM,IAAI,CAACX,GAAE,GAAI,EAAE,EAAE,IAAI;MAEpCuB,OAAO,CAACC,GAAG,CAACd,GAAG;IACjB;EACF,CAAC;EACDe,OAAO,GAAG;IACR,IAAI,CAACvB,UAAU,EAAE;EACnB;AACF","names":["Mensagem","name","components","data","burgers","burger_id","status","msg","methods","getPedidos","req","fetch","json","getStatus","deleteBurguer","id","method","res","setTimeout","updateBurger","event","option","target","value","dataJson","JSON","stringify","headers","body","resposta","console","log","mounted"],"sourceRoot":"","sources":["C:\\Users\\marce\\OneDrive\\Área de Trabalho\\make_burguer\\src\\components\\Dashboard.vue"],"sourcesContent":["<template>\r\n  <div id=\"burguer-table\">\r\n\r\n    <!-- Mensagem do sistema -->\r\n    <Mensagem  :msg=\"msg\" v-show=\"msg\"/>\r\n\r\n    <div>\r\n      <div id=\"burguer-table-header\">\r\n        <div class=\"order-id\">#</div>\r\n          <div>Cliente:</div>\r\n          <div>Pão:</div>\r\n          <div>Carne:</div>\r\n          <div>Opcionais:</div>\r\n          <div>Ações:</div>\r\n      </div>\r\n    </div>\r\n    <div id=\"burguer-table-rows\">\r\n      <div class=\"burguer-table-row\" v-for=\"burger in burgers\" :key=\"burger.id\">\r\n        <div class=\"order-number\"> {{ burger.id }} </div>\r\n        <div> {{ burger.nome }} </div>\r\n        <div> {{ burger.pao }} </div>\r\n        <div> {{ burger.carne }} </div>\r\n        <div>\r\n          <ul>\r\n            <li v-for=\"(opcional, index) in burger.opcionais\" :key=\"index\">\r\n              {{ opcional }}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div>\r\n          <select name=\"status\" class=\"status\" @change=\"updateBurger($event, burger.id)\">\r\n            <option value=\"\">Selecione</option>\r\n            <option v-for=\"s in status\" :key=\"s.id\" :value=\"s.tipo\" :selected=\"burger.status == s.tipo\"> {{ s.tipo }} </option>\r\n          </select>\r\n          <button class=\"delete-btn\" @click=\"deleteBurguer(burger.id)\">\r\n            Cancelar\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Mensagem from \"./Mensagem.vue\"\r\n\r\nexport default {\r\n  name: \"Dashboard\",\r\n  components: {\r\n    Mensagem\r\n  },\r\n  data() {\r\n    return {\r\n      burgers: null,\r\n      burger_id: null,\r\n      status: [],\r\n      msg: null\r\n    }\r\n  },\r\n  methods: {\r\n    async getPedidos() {\r\n      const req = await fetch(\"http://localhost:3000/burgers\");\r\n\r\n      const data = await req.json();\r\n\r\n      this.burgers = data;\r\n\r\n      //resgtando os status do backend\r\n      this.getStatus();\r\n\r\n    },\r\n    async getStatus() {\r\n      const req = await fetch(\"http://localhost:3000/status\");\r\n\r\n      const data = await req.json();\r\n\r\n      this.status = data\r\n    },\r\n    async deleteBurguer(id) {\r\n      const req = await fetch(`http://localhost:3000/burgers/${id}`,{\r\n        method: \"DELETE\"\r\n      });\r\n\r\n      const res = req.json();\r\n\r\n      //Inserindo mensagem de envio de pedido\r\n      this.msg = `Pedido REMOVIDO com sucesso`\r\n      \r\n      //limpando mensagem da tela\r\n      setTimeout(() => this.msg = \"\", 3000)\r\n\r\n      this.getPedidos();\r\n\r\n    },\r\n    async updateBurger(event, id) {\r\n      const option = event.target.value;\r\n      \r\n      const dataJson = JSON.stringify({ status: option })\r\n      \r\n      const req = await fetch(`http://localhost:3000/burgers/${id}`, {\r\n        method: \"PATCH\",\r\n        headers: { \"Content-type\": \"application/json\"},\r\n        body: dataJson\r\n      })\r\n\r\n      const res = await req.json();\r\n\r\n      //Inserindo mensagem de envio de pedido\r\n      this.msg = `Pedido Nº ${resposta.id} realizado com sucesso`\r\n      \r\n      //limpando mensagem da tela\r\n      setTimeout(() => this.msg = \"\", 3000)\r\n\r\n      console.log(res)\r\n    }\r\n  },\r\n  mounted() {\r\n    this.getPedidos();\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n#burguer-table {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n}\r\n\r\n#burguer-table-header,\r\n#burguer-table-rows,\r\n.burguer-table-row {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n#burguer-table-header {\r\n  font-weight: bold;\r\n  padding: 12px;\r\n  border-bottom: 3px solid #333;\r\n}\r\n.burguer-table-row {\r\n  width: 100%;\r\n  padding: 12px;\r\n  border-bottom: 1px solid #CCC;\r\n}\r\n\r\n#burguer-table-header div,\r\n.burguer-table-row div {\r\n  width: 19%; \r\n}\r\n\r\n#burguer-table-header .order-id,\r\n.burguer-table-row .order.number {\r\n  width: 19%;\r\n}\r\n\r\nselect {\r\n  padding: 12px 6px;\r\n  margin-right: 12px;\r\n}\r\n\r\n.delete-btn {\r\n  background-color: #222;\r\n  color: #FCBA03;\r\n  font-weight: bold;\r\n  border: 2px solid #222;\r\n  padding: 10px;\r\n  font-size: 16px;\r\n  margin: 0 auto;\r\n  cursor: pointer;\r\n  transition: .5s;\r\n}\r\n\r\n.delete-btn:hover {\r\n  background-color: transparent;\r\n  color: #222;\r\n}\r\n\r\n</style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}