{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, resolveComponent as _resolveComponent, vShow as _vShow, createVNode as _createVNode, withDirectives as _withDirectives, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-aae30ed8\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  id: \"burguer-table\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"div\", null, [/*#__PURE__*/_createElementVNode(\"div\", {\n  id: \"burguer-table-header\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"order-id\"\n}, \"#\"), /*#__PURE__*/_createElementVNode(\"div\", null, \"Cliente:\"), /*#__PURE__*/_createElementVNode(\"div\", null, \"Pão:\"), /*#__PURE__*/_createElementVNode(\"div\", null, \"Carne:\"), /*#__PURE__*/_createElementVNode(\"div\", null, \"Opcionais:\"), /*#__PURE__*/_createElementVNode(\"div\", null, \"Ações:\")])], -1 /* HOISTED */));\nconst _hoisted_3 = {\n  id: \"burguer-table-rows\"\n};\nconst _hoisted_4 = {\n  class: \"order-number\"\n};\nconst _hoisted_5 = [\"onChange\"];\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"\"\n}, \"Selecione\", -1 /* HOISTED */));\nconst _hoisted_7 = [\"value\", \"selected\"];\nconst _hoisted_8 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_Mensagem = _resolveComponent(\"Mensagem\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" Mensagem do sistema \"), _withDirectives(_createVNode(_component_Mensagem, {\n    msg: $data.msg\n  }, null, 8 /* PROPS */, [\"msg\"]), [[_vShow, $data.msg]]), _hoisted_2, _createElementVNode(\"div\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.burgers, burger => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      class: \"burguer-table-row\",\n      key: burger.id\n    }, [_createElementVNode(\"div\", _hoisted_4, _toDisplayString(burger.id), 1 /* TEXT */), _createElementVNode(\"div\", null, _toDisplayString(burger.nome), 1 /* TEXT */), _createElementVNode(\"div\", null, _toDisplayString(burger.pao), 1 /* TEXT */), _createElementVNode(\"div\", null, _toDisplayString(burger.carne), 1 /* TEXT */), _createElementVNode(\"div\", null, [_createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(burger.opcionais, (opcional, index) => {\n      return _openBlock(), _createElementBlock(\"li\", {\n        key: index\n      }, _toDisplayString(opcional), 1 /* TEXT */);\n    }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"div\", null, [_createElementVNode(\"select\", {\n      name: \"status\",\n      class: \"status\",\n      onChange: $event => $options.updateBurger($event, burger.id)\n    }, [_hoisted_6, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.status, s => {\n      return _openBlock(), _createElementBlock(\"option\", {\n        key: s.id,\n        value: s.tipo,\n        selected: burger.status == s.tipo\n      }, _toDisplayString(s.tipo), 9 /* TEXT, PROPS */, _hoisted_7);\n    }), 128 /* KEYED_FRAGMENT */))], 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_5), _createElementVNode(\"button\", {\n      class: \"delete-btn\",\n      onClick: $event => $options.deleteBurguer(burger.id)\n    }, \" Cancelar \", 8 /* PROPS */, _hoisted_8)])]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"mappings":";;;EACOA,EAAE,EAAC;AAAe;gEAKrBC,oBASM,2BARJA,oBAOM;EAPDD,EAAE,EAAC;AAAsB,iBAC5BC,oBAA6B;EAAxBC,KAAK,EAAC;AAAU,GAAC,GAAC,gBACrBD,oBAAmB,aAAd,UAAQ,gBACbA,oBAAe,aAAV,MAAI,gBACTA,oBAAiB,aAAZ,QAAM,gBACXA,oBAAqB,aAAhB,YAAU,gBACfA,oBAAiB,aAAZ,QAAM;;EAGZD,EAAE,EAAC;AAAoB;;EAEnBE,KAAK,EAAC;AAAc;;gEAarBD,oBAAmC;EAA3BE,KAAK,EAAC;AAAE,GAAC,WAAS;;;;;uBA9BpCC,oBAuCM,OAvCNC,UAuCM,GArCJC,4CAA4B,kBAC5BC,aAAoCC;IAAxBC,GAAG,EAAEC;EAAG,4CAAUA,SAAG,KAEjCC,UASM,EACNV,oBAuBM,OAvBNW,UAuBM,sBAtBJR,oBAqBMS,6BArB0CH,aAAO,EAAjBI,MAAM;yBAA5CV,oBAqBM;MArBDF,KAAK,EAAC,mBAAmB;MAA4Ba,GAAG,EAAED,MAAM,CAACd;QACpEC,oBAAiD,OAAjDe,UAAiD,mBAAnBF,MAAM,CAACd,EAAE,kBACvCC,oBAA8B,8BAArBa,MAAM,CAACG,IAAI,kBACpBhB,oBAA6B,8BAApBa,MAAM,CAACI,GAAG,kBACnBjB,oBAA+B,8BAAtBa,MAAM,CAACK,KAAK,kBACrBlB,oBAMM,cALJA,oBAIK,gCAHHG,oBAEKS,6BAF2BC,MAAM,CAACM,SAAS,GAApCC,QAAQ,EAAEC,KAAK;2BAA3BlB,oBAEK;QAF8CW,GAAG,EAAEO;MAAK,oBACxDD,QAAQ;wCAIjBpB,oBAQM,cAPJA,oBAGS;MAHDsB,IAAI,EAAC,QAAQ;MAACrB,KAAK,EAAC,QAAQ;MAAEsB,QAAM,YAAEC,qBAAY,CAACC,MAAM,EAAEZ,MAAM,CAACd,EAAE;QAC1E2B,UAAmC,qBACnCvB,oBAAmHS,6BAA/FH,YAAM,EAAXkB,CAAC;2BAAhBxB,oBAAmH;QAAtFW,GAAG,EAAEa,CAAC,CAAC5B,EAAE;QAAGG,KAAK,EAAEyB,CAAC,CAACC,IAAI;QAAGC,QAAQ,EAAEhB,MAAM,CAACiB,MAAM,IAAIH,CAAC,CAACC;0BAAUD,CAAC,CAACC,IAAI;kFAExG5B,oBAES;MAFDC,KAAK,EAAC,YAAY;MAAE8B,OAAK,YAAEP,sBAAa,CAACX,MAAM,CAACd,EAAE;OAAG,YAE7D","names":["id","_createElementVNode","class","value","_createElementBlock","_hoisted_1","_createCommentVNode","_createVNode","_component_Mensagem","msg","$data","_hoisted_2","_hoisted_3","_Fragment","burger","key","_hoisted_4","nome","pao","carne","opcionais","opcional","index","name","onChange","$options","$event","_hoisted_6","s","tipo","selected","status","onClick"],"sourceRoot":"","sources":["C:\\Users\\marce\\OneDrive\\Área de Trabalho\\make_burguer\\src\\components\\Dashboard.vue"],"sourcesContent":["<template>\r\n  <div id=\"burguer-table\">\r\n\r\n    <!-- Mensagem do sistema -->\r\n    <Mensagem  :msg=\"msg\" v-show=\"msg\"/>\r\n\r\n    <div>\r\n      <div id=\"burguer-table-header\">\r\n        <div class=\"order-id\">#</div>\r\n          <div>Cliente:</div>\r\n          <div>Pão:</div>\r\n          <div>Carne:</div>\r\n          <div>Opcionais:</div>\r\n          <div>Ações:</div>\r\n      </div>\r\n    </div>\r\n    <div id=\"burguer-table-rows\">\r\n      <div class=\"burguer-table-row\" v-for=\"burger in burgers\" :key=\"burger.id\">\r\n        <div class=\"order-number\"> {{ burger.id }} </div>\r\n        <div> {{ burger.nome }} </div>\r\n        <div> {{ burger.pao }} </div>\r\n        <div> {{ burger.carne }} </div>\r\n        <div>\r\n          <ul>\r\n            <li v-for=\"(opcional, index) in burger.opcionais\" :key=\"index\">\r\n              {{ opcional }}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div>\r\n          <select name=\"status\" class=\"status\" @change=\"updateBurger($event, burger.id)\">\r\n            <option value=\"\">Selecione</option>\r\n            <option v-for=\"s in status\" :key=\"s.id\" :value=\"s.tipo\" :selected=\"burger.status == s.tipo\"> {{ s.tipo }} </option>\r\n          </select>\r\n          <button class=\"delete-btn\" @click=\"deleteBurguer(burger.id)\">\r\n            Cancelar\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Mensagem from \"./Mensagem.vue\"\r\n\r\nexport default {\r\n  name: \"Dashboard\",\r\n  components: {\r\n    Mensagem\r\n  },\r\n  data() {\r\n    return {\r\n      burgers: null,\r\n      burger_id: null,\r\n      status: [],\r\n      msg: null\r\n    }\r\n  },\r\n  methods: {\r\n    async getPedidos() {\r\n      const req = await fetch(\"http://localhost:3000/burgers\");\r\n\r\n      const data = await req.json();\r\n\r\n      this.burgers = data;\r\n\r\n      //resgtando os status do backend\r\n      this.getStatus();\r\n\r\n    },\r\n    async getStatus() {\r\n      const req = await fetch(\"http://localhost:3000/status\");\r\n\r\n      const data = await req.json();\r\n\r\n      this.status = data\r\n    },\r\n    async deleteBurguer(id) {\r\n      const req = await fetch(`http://localhost:3000/burgers/${id}`,{\r\n        method: \"DELETE\"\r\n      });\r\n\r\n      const res = req.json();\r\n\r\n      //Inserindo mensagem de envio de pedido\r\n      this.msg = `Pedido Nº ${resposta.id} realizado com sucesso`\r\n      \r\n      //limpando mensagem da tela\r\n      setTimeout(() => this.msg = \"\", 3000)\r\n\r\n      this.getPedidos();\r\n    },\r\n    async updateBurger(event, id) {\r\n      const option = event.target.value;\r\n      \r\n      const dataJson = JSON.stringify({ status: option })\r\n      \r\n      const req = await fetch(`http://localhost:3000/burgers/${id}`, {\r\n        method: \"PATCH\",\r\n        headers: { \"Content-type\": \"application/json\"},\r\n        body: dataJson\r\n      })\r\n\r\n      const res = await req.json();\r\n\r\n      console.log(res)\r\n    }\r\n  },\r\n  mounted() {\r\n    this.getPedidos();\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n#burguer-table {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n}\r\n\r\n#burguer-table-header,\r\n#burguer-table-rows,\r\n.burguer-table-row {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n#burguer-table-header {\r\n  font-weight: bold;\r\n  padding: 12px;\r\n  border-bottom: 3px solid #333;\r\n}\r\n.burguer-table-row {\r\n  width: 100%;\r\n  padding: 12px;\r\n  border-bottom: 1px solid #CCC;\r\n}\r\n\r\n#burguer-table-header div,\r\n.burguer-table-row div {\r\n  width: 19%; \r\n}\r\n\r\n#burguer-table-header .order-id,\r\n.burguer-table-row .order.number {\r\n  width: 19%;\r\n}\r\n\r\nselect {\r\n  padding: 12px 6px;\r\n  margin-right: 12px;\r\n}\r\n\r\n.delete-btn {\r\n  background-color: #222;\r\n  color: #FCBA03;\r\n  font-weight: bold;\r\n  border: 2px solid #222;\r\n  padding: 10px;\r\n  font-size: 16px;\r\n  margin: 0 auto;\r\n  cursor: pointer;\r\n  transition: .5s;\r\n}\r\n\r\n.delete-btn:hover {\r\n  background-color: transparent;\r\n  color: #222;\r\n}\r\n\r\n</style>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}